# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
#    docker:
#      # specify the version you desire here
#      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
#      - image: circleci/python:3.6.1
#      - image: circleci/node:7.10
#
#      # Specify service dependencies here if necessary
#      # CircleCI maintains a library of pre-built images
#      # documented at https://circleci.com/docs/2.0/circleci-images/
#      # - image: circleci/postgres:9.4
    machine:
      python:
        version: 3.6.0
      node:
        version: 0.11.8


    working_directory: ~/awbriggs.com

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - python-dependencies-{{ checksum "requirements.txt" }}
          - node-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found

      - run:
          name: get npm
          command: ''

      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - run:
          name: install npm dependencies
          command: npm install
      - save_cache:
          paths:
            - ./venv
          key: python-dependencies-{{ checksum "requirements.txt" }}
      - save_cache:
          paths:
            - ./node_modules/
          key: node-dependencies-{{ checksum "package.json" }}

      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: run python tests
          command: |
            . venv/bin/activate
            python -m unittest discover -s server -p '*Test.py'
      - run:
          name: run jest test
          command: ./node_modules/.bin/jest

      - store_artifacts:
          path: test-reports
          destination: test-reports
